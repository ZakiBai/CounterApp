name: iOS CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode 16
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Set default scheme automatically
        id: scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['schemes'][0]")
          echo "scheme=$default" >> $GITHUB_OUTPUT
          echo "Using default scheme: $default"

      - name: Build and Test
        run: |
         # Ищем workspace
          file_to_build=$(find . -name "*.xcworkspace" | head -n1)
          if [ -n "$file_to_build" ]; then
            filetype_parameter="workspace"
          else
            # Ищем project
            file_to_build=$(find . -name "*.xcodeproj" | head -n1)
            if [ -n "$file_to_build" ]; then
              filetype_parameter="project"
            else
              echo "Error: No .xcworkspace or .xcodeproj found!"
              exit 1
            fi
          fi

          echo "Building $file_to_build of type $filetype_parameter"

          # Берём первый iPhone симулятор (Booted или Shutdown)
          device_info=$(xcrun simctl list devices available | grep -m1 -E 'iPhone.*(Shutdown|Booted)')

          # Проверяем, что нашли симулятор
          if [ -z "$device_info" ]; then
            echo "Error: No available iPhone simulator found!"
            exit 1
          fi

          # Имя устройства (до первой скобки)
          device=$(echo "$device_info" | sed -E 's/^(iPhone [^(]+).*/\1/')

          # OS для этого устройства (числа внутри скобок)
          simulator_id=$(echo "$device_info" | grep -oE '[A-F0-9-]{36}')
          os_version=$(xcrun simctl list devices | grep "$simulator_id" | grep -oE 'OS [0-9.]+' | awk '{print $2}')

          echo "Using device: $device, OS: $os_version"

          # Build
          xcodebuild build-for-testing \
            -scheme "${{ steps.scheme.outputs.scheme }}" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=iOS Simulator,name=$device,OS=$os_version"

          # Test
          xcodebuild test \
            -scheme "${{ steps.scheme.outputs.scheme }}" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=iOS Simulator,name=$device,OS=$os_version"
